// Code generated by mockery 2.9.4. DO NOT EDIT.

package mock

import (
	http "net/http"

	dq "doublequote"

	mock "github.com/stretchr/testify/mock"
)

// SessionService is an autogenerated mock type for the SessionService type
type SessionService struct {
	mock.Mock
}

// Create provides a mock function with given fields: w, r, uid
func (_m *SessionService) Create(w http.ResponseWriter, r *http.Request, uid int) (dq.Session, error) {
	ret := _m.Called(w, r, uid)

	var r0 dq.Session
	if rf, ok := ret.Get(0).(func(http.ResponseWriter, *http.Request, int) dq.Session); ok {
		r0 = rf(w, r, uid)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(dq.Session)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(http.ResponseWriter, *http.Request, int) error); ok {
		r1 = rf(w, r, uid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Get provides a mock function with given fields: r
func (_m *SessionService) Get(r *http.Request) (dq.Session, error) {
	ret := _m.Called(r)

	var r0 dq.Session
	if rf, ok := ret.Get(0).(func(*http.Request) dq.Session); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(dq.Session)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*http.Request) error); ok {
		r1 = rf(r)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
